package com.gourianova.myapp.constants;

public class ClientConstants {
//TODO: format constant
    public static final String USER_CHOOSE =  "Type the number: \n" +
            "\n" +
            "                        1 +\n" +
            "                        Найти наибольшее количество предложений текста, в которых есть одинаковые слова +\n" +
            "                        2 +\n" +
            "                        Вывести все предложения заданного текста в порядке возрастания количества слов в каждом из них+\n" +
            "                        3 +\n" +
            "                        Найти такое слово в первом предложении, которого нет ни в одном из остальных предложений +\n" +
            "                        4 +\n" +
            "                        Во всех вопросительных предложениях текста найти и напечатать без повторений слова заданной длины +\n" +
            "                        5 +\n" +
            "                        В каждом предложении текста поменять местами первое слово с последним, не изменяя длины предложения +\n" +
            "                        6 +\n" +
            "                        Напечатать слова текста в алфавитном порядке по первой букве. Слова, начинающиеся с новой буквы, печатать с красной строки+\n" +
            "                        7 +\n" +
            "                        Рассортировать слова текста по возрастанию доли гласных букв (отношение количества гласных к общему количеству букв в слове) +\n" +
            "                        8 +\n" +
            "                        Слова текста, начинающиеся с гласных букв, рассортировать в алфавитном порядке по первой согласной букве слова +\n" +
            "                        9 +\n" +
            "                        Все слова текста рассортировать по возрастанию количества заданной буквы в слове+\n" +
            "                        Слова с одинаковым количеством букв расположить в алфавитном порядке+\n" +
            "                        10 +\n" +
            "                        Существует текст и список слов. Для каждого слова из заданного списка найти,+\n" +
            "                        сколько раз оно встречается в каждом предложении, и рассортировать слова по убыванию общего количества вхождений+\n" +
            "                        11 +\n" +
            "                        В каждом предложении текста исключить подстроку максимальной длины, начинающуюся и заканчивающуюся заданными символами +\n" +
            "                        12 +\n" +
            "                        Из текста удалить все слова заданной длины, начинающиеся на согласную букву +\n" +
            "                        13 +\n" +
            "                        Отсортировать слова в тексте по убыванию количества вхождений заданного символа, а в случае равенства – по алфавиту+\n" +
            "                        14 +\n" +
            "                        В заданном тексте найти подстроку максимальной длины, являющуюся палиндромом, т.е. читающуюся слева направо и справа налево одинаково +\n" +
            "                        15 +\n" +
            "                        Преобразовать каждое слово в тексте, удалив из него все последующие (предыдущие) вхождения первой (последней) буквы этого слова +\n" +
            "                        16 -\n" +
            "                        В некотором предложении текста слова заданной длины заменить указанной  подстрокой, длина которой может не совпадать с длиной слова";
}
